meta.asm requires the following 15 primitives: adr be bf bt ci cl cll end gn1 id lb out r set tst

--------------------

ADR IDENT : ADDRESS
Produces the address which is assigned to the given identifier as a constant


BE : HALT IF FALSE
Halt if switch is off, otherwise continue in sequence


BF AAA	: BRANCH FALSE
Branch to the address AAA if the top term in the stack is the integer 0. Otherwise, continue in
sequence. Do not pop the stack.


BT AAA : BRANCH IF TRUE
Branch to the address AAA if the top term in the stack is the integer 1. Otherwise, continue in
sequence. Do not pop the stack.


CL STRING : COPY LITERAL
Output the variable length string given as the argument. A blank character will be inserted
in the output following the string.


END : END
Denotes the end of the program


ID : IDENTIFIER
After deleting initial blanks in the input string, test if it begins with an identifier,
i.e. a letter followed by a sequence of letters and/or digits. If so, delete the
identifier and set switch. If not, reset switch.


R : RETURN
Return to the exit address, popping up the stack by one or three cells according to the flag.
If the stack is popped by only one cell, then clear the top two cells to blanks, because they
were blank when the subroutines was entered.


TST STRING : TEST
After deleting initial blanks in the input string, compare it to the string given as argument.
If the comparison is met, delete the matched portion from the input and set switch. If not
met, reset switch
